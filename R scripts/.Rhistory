# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# g <- g + facet_wrap(~ Algo, ncol = 3, scales = "free")
#
# g <- g + theme(legend.title = element_blank())
# g <- g + theme(legend.position = "bottom")
testfile <- paste0("scheduling.csv")
result.df <- read.csv(paste0(testfile), header = TRUE)
plot(1:10, 1:10, xlim = c(0,1000), ylim = c(-1,8), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
rect(xleft = row$startTime, ybottom = row$processor-0.2, xright = row$completeTime, ytop = row$processor+0.2, col = "pink")
}
testfile <- paste0("scheduling.csv")
result.df <- read.csv(paste0(testfile), header = TRUE)
plot(1:10, 1:10, xlim = c(0,1000), ylim = c(-1,8), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
rect(xleft = row$startTime, ybottom = row$processor-0.2, xright = row$completeTime, ytop = row$processor+0.2, col = "pink")
}
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
plot(1:10, 1:10, xlim = c(0,1000), ylim = c(-1,8), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
rect(xleft = row$startTime, ybottom = row$processor-0.2, xright = row$completeTime, ytop = row$processor+0.2, col = "pink")
}
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# g <- g + facet_wrap(~ Algo, ncol = 3, scales = "free")
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# g <- g + facet_wrap(~ Algo, ncol = 3, scales = "free")
#
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# g <- g + facet_wrap(~ Algo, ncol = 3, scales = "free")
#
# g <- g + theme(legend.title = element_blank())
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# g <- g + facet_wrap(~ Algo, ncol = 3, scales = "free")
#
# g <- g + theme(legend.title = element_blank())
# g <- g + theme(legend.position = "bottom")
sprintf("------------------------Start------------------------------")
result.df <- data.frame(jobID = integer(),
taskID = integer(),
processorType = character(),
processor = integer(),
startTime = double(),
completeTime = double()
)
View(result.df)
testfile <- paste0("scheduling.csv")
result.df <- read.csv(paste0(testfile), header = TRUE)
View(result.df)
View(result.df)
plot(1:10, 1:10, xlim = c(0,1000), ylim = c(-1,8), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
}
View(result.df)
testfile <- paste0("scheduling.csv")
result.df <- read.csv(paste0(testfile), header = TRUE)
plot(1:10, 1:10, xlim = c(0,950), ylim = c(-1,6), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
}
plot(1:10, 1:10, xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
}
testfile <- paste0("scheduling.csv")
result.df <- read.csv(paste0(testfile), header = TRUE)
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
}
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
}
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d,%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
text(row$startTime, ybottom = row$processorID+0.2, txt)
}
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d,%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
text(row$startTime, row$processorID+0.2, txt)
}
text(row$startTime, row$processorID+0.1, txt)
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d,%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
text(row$startTime, row$processorID+0.1, txt)
}
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d,%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
text(row$startTime, row$processorID+0.1, txt)
}
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d,%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
text(row$startTime, row$processorID+0.1, txt,2)
}
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d,%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
text(row$startTime, row$processorID+0.1, txt, 0.5)
}
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d,%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
text(row$startTime, row$processorID+0.1, txt, size = 0.5)
}
g <- plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d,%d',row$jobID,row$taskID);
g <- rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
g <- text(row$startTime, row$processorID+0.1, txt, size = 0.5)
}
ggsave("scheduling.pdf", width = 15, height = 5)
g <- plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
g <- rect(xleft = row$startTime, ybottom = row$processorID-0.05, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
g <- text(row$startTime, row$processorID+0.1, txt, size = 0.5)
}
ggsave("scheduling.pdf", width = 15, height = 5)
g <- plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
g <- rect(xleft = row$startTime, ybottom = row$processorID-0.3, xright = row$completeTime, ytop = row$processorID+0.3, col = "pink")
g <- text(row$startTime, row$processorID+0.05, txt, size = 0.5)
}
ggsave("scheduling.pdf", width = 15, height = 5)
g <- plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
par(pin = c(15,5))
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
g <- rect(xleft = row$startTime, ybottom = row$processorID-0.3, xright = row$completeTime, ytop = row$processorID+0.3, col = "pink")
g <- text(row$startTime, row$processorID+0.05, txt, size = 0.5)
}
ggsave("scheduling.pdf", width = 15, height = 5)
par(pin = c(15,5))
g <- plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
g <- rect(xleft = row$startTime, ybottom = row$processorID-0.3, xright = row$completeTime, ytop = row$processorID+0.3, col = "pink")
g <- text(row$startTime, row$processorID+0.05, txt, size = 0.5)
}
par(pin = c(10,5))
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
g <- rect(xleft = row$startTime, ybottom = row$processorID-0.3, xright = row$completeTime, ytop = row$processorID+0.3, col = "pink")
g <- text(row$startTime, row$processorID+0.05, txt, size = 0.5)
}
g <- plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
par(pin = c(10,5))
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
par(pin = c(10,5))
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.3, xright = row$completeTime, ytop = row$processorID+0.3, col = "pink")
text(row$startTime, row$processorID+0.05, txt, size = 0.5)
}
ggsave("scheduling.pdf", width = 15, height = 5)
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
#par(pin = c(10,5))
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.3, xright = row$completeTime, ytop = row$processorID+0.3, col = "pink")
text(row$startTime, row$processorID+0.05, txt, size = 0.5)
}
ggsave("scheduling.pdf", width = 15, height = 5)
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
View(result.df)
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
#par(pin = c(10,5))
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.3, col = "pink")
text(row$startTime, row$processorID+0.05, txt, size = 0.5)
}
ggsave("scheduling.pdf", width = 15, height = 5)
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
#par(pin = c(10,5))
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.3, col = "pink")
text(row$startTime, row$processorID+0.05, txt, size = 0.5)
}
plot("time", "processor", xlim = c(0,950), ylim = c(-0.5,5.5), type = "n")
#par(pin = c(10,5))
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
# sprintf("%f\\n", row$startTime)
# sprintf("%f\\n", row$Processsor-0.2)
# sprintf("%f\\n", row$completeTime)
# sprintf("%f\\n", row$Processor+0.2)
txt=sprintf('%d-%d',row$jobID,row$taskID);
rect(xleft = row$startTime, ybottom = row$processorID-0.2, xright = row$completeTime, ytop = row$processorID+0.2, col = "pink")
text(row$startTime, row$processorID+0.05, txt, size = 0.5)
}
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# g <- g + facet_wrap(~ Algo, ncol = 3, scales = "free")
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# g <- g + facet_wrap(~ Algo, ncol = 3, scales = "free")
#
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# g <- g + facet_wrap(~ Algo, ncol = 3, scales = "free")
#
# g <- g + theme(legend.title = element_blank())
# testfit.df$Algo <- factor(testfit.df$Algo, levels = algos) #2020.10.20 order the appearrence of subplots
# g <- ggplot(testfit.df, aes(Generation, Mean, colour = factor(Device), shape = factor(Device))) + geom_line() + geom_point(size = 1)
# #g <- g + facet_wrap(~ Scenario, nrow = 2, scales = "free")
# #g <- g + facet_wrap(~ Scenario, ncol = 3, scales = "free")
# g <- g + facet_wrap(~ Algo, ncol = 3, scales = "free")
#
# g <- g + theme(legend.title = element_blank())
# g <- g + theme(legend.position = "bottom")
View(row)
setwd(working_dir)
sprintf("------------------------Start------------------------------")
result.df <- data.frame(jobID = integer(),
taskID = integer(),
processorType = character(),
processor = integer(),
startTime = double(),
completeTime = double()
)
testfile <- paste0("scheduling.csv")
result.df <- read.csv(paste0(testfile), header = TRUE)
# par(pin = c(10,5))
pdf('scheduling.pdf', width=15,height=6)
plot("","",xlim = c(0,950), ylim = c(-0.5,5.5), type = "n", cex.axis = 2, font.axis = 1, yaxt = "n")
for(pross in 1:6){
pross <- pross - 1
rect(xleft = 0, ybottom = pross-0.3, xright = 950, ytop = pross+0.3, lwd = 1, lty = 2)
}
color <- c("#F0C9C0", "#FFFFBF")
result.df <- data.frame(jobID = integer(),
taskID = integer(),
processorType = character(),
processor = integer(),
startTime = double(),
completeTime = double()
)
testfile <- paste0("scheduling.csv")
result.df <- read.csv(paste0(testfile), header = TRUE)
# par(pin = c(10,5))
pdf('scheduling.pdf', width=15,height=6)
plot("","",xlim = c(0,950), ylim = c(-0.5,5.5), type = "n", cex.axis = 2, font.axis = 1, yaxt = "n")
for(pross in 1:6){
pross <- pross - 1
rect(xleft = 0, ybottom = pross-0.3, xright = 950, ytop = pross+0.3, lwd = 1, lty = 2)
}
color <- c("#F0C9C0", "#FFFFBF")
c = "#F0C9C0"
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
txt <- paste0(row$jobID, ".", row$taskID);
if(row$jobID == 0){
c = color[1]
}
else{
c = color[2]
}
rect(xleft = row$startTime, ybottom = row$processorID-0.3, xright = row$completeTime, ytop = row$processorID+0.3, col = c, lwd = 1)
text((row$startTime+row$completeTime)/2, row$processorID+0.02, txt)
}
axis(side = 2, at = c(0, 1, 2, 3, 4, 5), labels = c("Device 0","Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"), las = 3)
working_dir <- "/Users/mengxu/IdeaProjects/Fog-Computing/src/mengxu"
setwd(working_dir)
sprintf("------------------------Start------------------------------")
result.df <- data.frame(jobID = integer(),
taskID = integer(),
processorType = character(),
processor = integer(),
startTime = double(),
completeTime = double()
)
testfile <- paste0("scheduling.csv")
result.df <- read.csv(paste0(testfile), header = TRUE)
# par(pin = c(10,5))
pdf('scheduling.pdf', width=15,height=6)
plot("","",xlim = c(0,950), ylim = c(-0.5,5.5), type = "n", cex.axis = 2, font.axis = 1, yaxt = "n")
for(pross in 1:6){
pross <- pross - 1
rect(xleft = 0, ybottom = pross-0.3, xright = 950, ytop = pross+0.3, lwd = 1, lty = 2)
}
color <- c("#F0C9C0", "#FFFFBF")
c = "#F0C9C0"
for(pos in 1:nrow(result.df)){
row <- result.df[pos,]
txt <- paste0(row$jobID, ".", row$taskID);
if(row$jobID == 0){
c = color[1]
}
else{
c = color[2]
}
rect(xleft = row$startTime, ybottom = row$processorID-0.3, xright = row$completeTime, ytop = row$processorID+0.3, col = c, lwd = 1)
text((row$startTime+row$completeTime)/2, row$processorID+0.02, txt)
}
axis(side = 2, at = c(0, 1, 2, 3, 4, 5), labels = c("Device 0","Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"), las = 3)
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
# scale_y_continuous(limits=c(-0.5,5.5),breaks = c(0, 1, 2, 3, 4, 5),labels=c("Device 0", "Device 1", "Fog 0", "Fog 1", "Cloud 0","Cloud 1"))
install.packages("scatterplot3d")
install.packages("scatterplot3d")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
